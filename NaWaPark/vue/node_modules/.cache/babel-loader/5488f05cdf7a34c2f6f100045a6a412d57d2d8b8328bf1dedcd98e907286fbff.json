{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, vShow as _vShow, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-110d399e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"subscribe\",\n  align: \"center\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Subscribe to Our Newsletter\", -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"To receive the latest updates in the industry\", -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"p\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.closeForm && $options.closeForm(...args))\n  }, \"X\"), _hoisted_2, _hoisted_3, _hoisted_4, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.email = $event),\n    placeholder: \"Type in your email address\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.email]]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.subscribe && $options.subscribe(...args))\n  }, \"Subscribe\"), _withDirectives(_createElementVNode(\"span\", null, \"You're now subscribed to our newsletter\", 512 /* NEED_PATCH */), [[_vShow, $data.subscribed]])]);\n}","map":{"version":3,"names":["class","align","_createElementVNode","_createElementBlock","_hoisted_1","onClick","_cache","args","$options","closeForm","_hoisted_2","_hoisted_3","_hoisted_4","$event","$data","email","placeholder","subscribe","subscribed"],"sources":["C:\\Users\\SSAFY\\git\\NaWaPark\\NaWaPark\\vue\\src\\components\\SubscriptionForm.vue"],"sourcesContent":["<template>\r\n  <div class=\"subscribe\" align=\"center\">\r\n    <p @click=\"closeForm\">X</p>\r\n    <h1>Subscribe to Our Newsletter</h1>\r\n    <h2>To receive the latest updates in the industry</h2>\r\n    <br />\r\n    <input v-model=\"email\" placeholder=\"Type in your email address\" />\r\n    <button @click=\"subscribe\">Subscribe</button>\r\n    <span v-show=\"subscribed\">You're now subscribed to our newsletter</span>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      email: '',\r\n      subscribed: false\r\n    };\r\n  },\r\n  methods: {\r\n    closeForm() {\r\n      this.$el.style.top = '-550px';\r\n      this.$el.style.opacity = '0';\r\n    },\r\n    subscribe() {\r\n      // You can implement your subscription logic here\r\n      // For demonstration, we'll just simulate a delay\r\n      setTimeout(() => {\r\n        this.subscribed = true;\r\n      }, 2000);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n@import \"https://fonts.googleapis.com/css?family=Indie+Flower\";\r\nbody {\r\n  background: #3cb371;\r\n}\r\n.subscribe {\r\n  width: 600px;\r\n  min-height: 320px;\r\n  margin: calc(50vh - 160px) auto;\r\n  background: #f0f0f0;\r\n  box-shadow: 0 0 60px -15px #323232;\r\n  overflow: hidden;\r\n  border-radius: 10px;\r\n  font-family: 'Indie Flower', cursive;\r\n  position: relative;\r\n  transition: all 1s;\r\n  top: -550px;\r\n  opacity: 0;\r\n  max-width: calc(100vw - 40px);\r\n}\r\n.subscribe:before {\r\n  height: 20px;\r\n  background-image: linear-gradient(20deg, silver 50%, #dcdcdc 50%);\r\n  background-size: 50px;\r\n  background-repeat: repeat;\r\n  display: block;\r\n  content: '';\r\n  -webkit-transform: skewX(-30deg) scaleX(1.05);\r\n}\r\nh1, h2, button, input, span {\r\n  transition: all 0.5s;\r\n}\r\nh1 {\r\n  margin-top: 50px;\r\n}\r\nh2 {\r\n  color: grey;\r\n}\r\nbutton {\r\n  font-family: 'Indie Flower', cursive;\r\n  font-size: 18px;\r\n  padding: 8px 8px 6px;\r\n  color: #3cb371;\r\n  font-weight: 700;\r\n  cursor: pointer;\r\n  border: 2px solid #3cb371;\r\n  background: none;\r\n}\r\nbutton:hover {\r\n  color: #fff;\r\n  background: #3cb371;\r\n}\r\ninput {\r\n  font-family: 'Indie Flower', cursive;\r\n  font-size: 15px;\r\n  padding: 10px 11px 8px;\r\n  color: #3cb371;\r\n  font-weight: 700;\r\n  border: 2px solid #3cb371;\r\n  background: none;\r\n  margin-right: 6px;\r\n  width: 200px;\r\n  outline: none;\r\n}\r\np {\r\n  position: absolute;\r\n  right: 14px;\r\n  font-size: 24px;\r\n  top: -19px;\r\n  font-weight: 700;\r\n  cursor: pointer;\r\n}\r\nspan {\r\n  position: absolute;\r\n  top: 90px;\r\n  text-align: center;\r\n  font-size: 44px;\r\n  display: block;\r\n  color: #3cb371;\r\n  padding: 15px 47px 0;\r\n  border-radius: 50%;\r\n  width: calc(100% - 94px);\r\n  opacity: 0;\r\n  pointer-events: none;\r\n}\r\n</style>\r\n"],"mappings":";;;EACOA,KAAK,EAAC,WAAW;EAACC,KAAK,EAAC;;gEAE3BC,mBAAA,CAAoC,YAAhC,6BAA2B;gEAC/BA,mBAAA,CAAsD,YAAlD,+CAA6C;gEACjDA,mBAAA,CAAM;;uBAJRC,mBAAA,CAQM,OARNC,UAQM,GAPJF,mBAAA,CAA2B;IAAvBG,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,SAAA,IAAAD,QAAA,CAAAC,SAAA,IAAAF,IAAA,CAAS;KAAE,GAAC,GACvBG,UAAoC,EACpCC,UAAsD,EACtDC,UAAM,E,gBACNV,mBAAA,CAAkE;IANtE,uBAAAI,MAAA,QAAAA,MAAA,MAAAO,MAAA,IAMoBC,KAAA,CAAAC,KAAK,GAAAF,MAAA;IAAEG,WAAW,EAAC;iDAAnBF,KAAA,CAAAC,KAAK,E,GACrBb,mBAAA,CAA6C;IAApCG,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAS,SAAA,IAAAT,QAAA,CAAAS,SAAA,IAAAV,IAAA,CAAS;KAAE,WAAS,G,gBACpCL,mBAAA,CAAwE,cAA9C,yCAAuC,0B,SAAnDY,KAAA,CAAAI,UAAU,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}