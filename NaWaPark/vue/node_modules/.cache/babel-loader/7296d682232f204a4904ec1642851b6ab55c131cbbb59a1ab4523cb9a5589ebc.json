{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-1c918b44\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"board-detail\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"image-container\"\n}, [/*#__PURE__*/_createElementVNode(\"img\", {\n  src: \"https://cdn.vuetifyjs.com/images/cards/sunshine.jpg\",\n  alt: \"게시물 이미지\"\n}), /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"title\"\n}, \"제목입니다!!!\")], -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"content\"\n}, \" 글내용입니다. \", -1 /* HOISTED */));\nconst _hoisted_4 = [_hoisted_2, _hoisted_3];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [..._hoisted_4]);\n}","map":{"version":3,"names":["class","_createElementVNode","src","alt","_hoisted_2","_hoisted_3","_createElementBlock","_hoisted_1","_hoisted_4"],"sources":["C:\\Users\\SSAFY\\git\\NaWaPark\\NaWaPark\\vue\\src\\views\\Board\\BoardDetail.vue"],"sourcesContent":["<template>\r\n  <div class=\"board-detail\">\r\n    <div class=\"image-container\">\r\n      <img src='https://cdn.vuetifyjs.com/images/cards/sunshine.jpg' alt=\"게시물 이미지\">\r\n      <h2 class=\"title\">제목입니다!!!</h2>\r\n    </div>\r\n    <div class=\"content\">\r\n\t\t글내용입니다.\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'BoardDetail',\r\n  props: {\r\n    post: {\r\n      type: Object,\r\n      required: true\r\n    }\r\n  },\r\n  methods: {\r\n    formatDate(date) {\r\n      // 날짜를 원하는 형식으로 포맷팅하는 메서드\r\n      // 예: YYYY년 MM월 DD일\r\n      return `${date.getFullYear()}년 ${date.getMonth() + 1}월 ${date.getDate()}일`;\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.board-detail {\r\n  padding: 20px;\r\n  position: relative; /* 컨테이너를 상대적으로 배치 */\r\n  background-color: white;\r\n}\r\n\r\n.image-container {\r\n  position: relative; /* 이미지와 제목을 포함하는 컨테이너를 상대적으로 배치 */\r\n  width: 100%;\r\n}\r\n\r\n.image-container img {\r\n  width: 100%; /* 이미지가 컨테이너의 너비를 채우도록 설정 */\r\n  height: auto; /* 이미지의 측면 비율 유지 */\r\n  max-width: 100%; /* 이미지의 최대 너비 설정 */\r\n  margin: 0px;\r\n}\r\n\r\n.image-container .title {\r\n  position: absolute; /* 제목을 이미지 위에 절대적으로 배치 */\r\n  top: 50%; /* 이미지의 중앙으로 이동 */\r\n  left: 50%; /* 이미지의 중앙으로 이동 */\r\n  transform: translate(-50%, -50%); /* 제목을 가운데 정렬 */\r\n  color: #fff; /* 텍스트 색상 설정 */\r\n  background-color: rgba(0, 0, 0, 0.5); /* 배경색과 투명도 설정 */\r\n  padding: 5px 10px; /* 내부 여백 설정 */\r\n  font-size: 18px; /* 제목 텍스트 크기 설정 */\r\n  border-radius: 5px; /* 모서리를 둥글게 설정 */\r\n}\r\n\r\n\r\n</style>\r\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAc;gEACvBC,mBAAA,CAGM;EAHDD,KAAK,EAAC;AAAiB,I,aAC1BC,mBAAA,CAA6E;EAAxEC,GAAG,EAAC,qDAAqD;EAACC,GAAG,EAAC;iBACnEF,mBAAA,CAA+B;EAA3BD,KAAK,EAAC;AAAO,GAAC,UAAQ,E;gEAE5BC,mBAAA,CAEM;EAFDD,KAAK,EAAC;AAAS,GAAC,WAErB;oBANAI,UAGM,EACNC,UAEM,C;;uBAPRC,mBAAA,CAQM,OARNC,UAQM,EATR,IAAAC,UAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}