{"ast":null,"code":"export default {\n  data() {\n    return {\n      boardList: [{\n        color: '#356859',\n        variant: 'indigo',\n        title: 'Title 1',\n        description: 'Description 1'\n      }, {\n        color: '#356859',\n        variant: 'indigo-darken-3',\n        title: 'Title 2',\n        description: 'Description 2'\n      }, {\n        color: '#356859',\n        variant: 'primary',\n        title: 'Title 3',\n        description: 'Description 3'\n      }, {\n        color: '#356859',\n        variant: 'secondary',\n        title: 'Title 4',\n        description: 'Description 4'\n      }],\n      visibleCards: []\n    };\n  },\n  mounted() {\n    // Initialize visibleCards array with all false values\n    this.visibleCards = new Array(this.boardList.length).fill(false);\n  },\n  methods: {\n    // Method to show cards one by one with delay\n    showCard(index) {\n      if (this.visibleCards[index]) {\n        return true; // Show card if already visible\n      } else {\n        setTimeout(() => {\n          // Set the visibility of the card to true after a delay\n          this.visibleCards.splice(index, 1, true);\n        }, 200 * index); // Change the delay value as needed\n        return false; // Hide card until the delay expires\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","boardList","color","variant","title","description","visibleCards","mounted","Array","length","fill","methods","showCard","index","setTimeout","splice"],"sources":["C:\\Users\\SSAFY\\git\\NaWaPark\\NaWaPark\\vue\\src\\views\\BoardPage.vue"],"sourcesContent":["<template>\r\n  <v-row justify=\"center\">\r\n    <v-col\r\n      v-for=\"(board, index) in boardList\"\r\n      :key=\"index\"\r\n      cols=\"12\"\r\n      md=\"6\"\r\n    >\r\n      <transition name=\"fade\">\r\n        <v-card\r\n          v-if=\"showCard(index)\"\r\n          :color=\"board.color\"\r\n          :variant=\"board.variant\"\r\n          class=\"mx-auto mb-4 bg-basil text-basil\"\r\n          max-width=\"400\"\r\n        >\r\n          <v-card-item>\r\n            <div>\r\n              <div class=\"text-overline mb-1\">\r\n                {{ board.variant }}\r\n              </div>\r\n              <div class=\"text-h6 mb-1\">\r\n                {{ board.title }}\r\n              </div>\r\n              <div class=\"text-caption\">{{ board.description }}</div>\r\n            </div>\r\n          </v-card-item>\r\n\r\n          <v-card-actions>\r\n            <v-btn>\r\n              Button\r\n            </v-btn>\r\n          </v-card-actions>\r\n        </v-card>\r\n      </transition>\r\n    </v-col>\r\n  </v-row>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      boardList: [\r\n        { color: '#356859', variant: 'indigo', title: 'Title 1', description: 'Description 1' }, \r\n        { color: '#356859', variant: 'indigo-darken-3', title: 'Title 2', description: 'Description 2' }, \r\n        { color: '#356859', variant: 'primary', title: 'Title 3', description: 'Description 3' },\r\n        { color: '#356859', variant: 'secondary', title: 'Title 4', description: 'Description 4' }\r\n      ],\r\n      visibleCards: []\r\n    };\r\n  },\r\n  mounted() {\r\n    // Initialize visibleCards array with all false values\r\n    this.visibleCards = new Array(this.boardList.length).fill(false);\r\n  },\r\n  methods: {\r\n    // Method to show cards one by one with delay\r\n    showCard(index) {\r\n      if (this.visibleCards[index]) {\r\n        return true; // Show card if already visible\r\n      } else {\r\n        setTimeout(() => {\r\n          // Set the visibility of the card to true after a delay\r\n          this.visibleCards.splice(index, 1, true);\r\n        }, 200 * index); // Change the delay value as needed\r\n        return false; // Hide card until the delay expires\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Helper classes */\r\n.bg-basil {\r\n  background-color: #356859 !important;\r\n}\r\n.text-basil {\r\n  color: #FFFBE6 !important;\r\n}\r\n.fade-enter-active, .fade-leave-active {\r\n  transition: opacity 0.5s;\r\n}\r\n.fade-enter, .fade-leave-to {\r\n  opacity: 0;\r\n}\r\n</style>\r\n"],"mappings":"AAwCA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,CACT;QAAEC,KAAK,EAAE,SAAS;QAAEC,OAAO,EAAE,QAAQ;QAAEC,KAAK,EAAE,SAAS;QAAEC,WAAW,EAAE;MAAgB,CAAC,EACvF;QAAEH,KAAK,EAAE,SAAS;QAAEC,OAAO,EAAE,iBAAiB;QAAEC,KAAK,EAAE,SAAS;QAAEC,WAAW,EAAE;MAAgB,CAAC,EAChG;QAAEH,KAAK,EAAE,SAAS;QAAEC,OAAO,EAAE,SAAS;QAAEC,KAAK,EAAE,SAAS;QAAEC,WAAW,EAAE;MAAgB,CAAC,EACxF;QAAEH,KAAK,EAAE,SAAS;QAAEC,OAAO,EAAE,WAAW;QAAEC,KAAK,EAAE,SAAS;QAAEC,WAAW,EAAE;MAAgB,EAC1F;MACDC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR;IACA,IAAI,CAACD,YAAW,GAAI,IAAIE,KAAK,CAAC,IAAI,CAACP,SAAS,CAACQ,MAAM,CAAC,CAACC,IAAI,CAAC,KAAK,CAAC;EAClE,CAAC;EACDC,OAAO,EAAE;IACP;IACAC,QAAQA,CAACC,KAAK,EAAE;MACd,IAAI,IAAI,CAACP,YAAY,CAACO,KAAK,CAAC,EAAE;QAC5B,OAAO,IAAI,EAAE;MACf,OAAO;QACLC,UAAU,CAAC,MAAM;UACf;UACA,IAAI,CAACR,YAAY,CAACS,MAAM,CAACF,KAAK,EAAE,CAAC,EAAE,IAAI,CAAC;QAC1C,CAAC,EAAE,GAAE,GAAIA,KAAK,CAAC,EAAE;QACjB,OAAO,KAAK,EAAE;MAChB;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}